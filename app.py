import os, json
from flask import Flask, request, redirect, send_file, render_template
from flasgger import Swagger

from odf_gen import fill_template

app = Flask(__name__)


swagger = Swagger(app)

example_data = {
    "start_report_date": {
        "type": "String", "data": "01 января 2016"
    },
    "end_report_date": {
        "type": "String", "data": "31 декабря 2022"
    },
    "table1": {
        "type": "Table",
        "table_title":
            [
                [
                    {"label": "№ п/п", "rowspan": 2, "width": "1.5cm", "relcolumnwidth": "900*"},
                    {"label": "Фамилия, инициалы", "rowspan": 2, "width": "4cm", "relcolumnwidth": "2400*"},
                    {"label": "Должность", "rowspan": 2, "width": "3cm", "relcolumnwidth": "1600*"},
                    {"label": "Объекты недвижимости, находящиеся в собственности", "colspan": 4},
                    {"label": "Объекты недвижимости, находящиеся в пользовании", "colspan": 3},
                    {"label": "Перечень транспортных средств, принадлежащих на праве собственности (вид, марка)", "rowspan": 2},
                    {"label": "Декларированный годовой доход (руб.)", "rowspan": 2},
                    {"label": "Сведения об источниках получения средств, за счет которых совершена сделка (вид приобретенного имещества, источники)", "rowspan": 2}
                ],
                [
                    "Вид объекты",
                    "Вид собственности",
                    "Площадь (кв.м.)",
                    "Страна расположения",
                    "Вид объекта",
                    "Площадь (кв.м.)",
                    "Страна расположения"
                ]
            ],
        "data":
            [
                [
                    {"label": 1, "rowspan": 12},
                    {"label": "Ивавнов Петр Иванович", "rowspan": 1},
                    {"label": "", "rowspan": 1},
                    "",
                    "",
                    "",
                    "",
                    "Квартира",
                    "97",
                    "Российская Федерация",
                    " ",
                    {"label": 0, "rowspan": 1},
                    ""
                ],
                [
                    {"label": "Иванов Иван Иванович", "rowspan": 7},
                    {"label": "старший сотрудник управления образования Ведомства", "rowspan": 7},
                    "Земельный участок",
                    "Индивидуальная",
                    "1500",
                    "Российская Федерация",
                    "Квартира",
                    "63",
                    "Российская Федерация",
                    "БЕНТЛИ Бентьяго Турбо С Эксклюзив",
                    {"label": 7110486, "rowspan": 7},
                    ""
                ],
                ["Жилой дом (часть жилого дома (комната), дача)", "Индивидуальная", "270", "Российская Федерация", "Гараж", "24", "Российская Федерация", "Харлей Дэвитсон Фат Бой", ""], ["Квартира", "Долевая, 1/2", "97", "Российская Федерация", "Объект незавершенного строительства (жилой дом)", "", "Российская Федерация", "ЮМЗ 50", ""], ["Квартира", "Долевая, 1/3", "56.7", "Российская Федерация", "", "", "", "Юкоа КС 200", ""], ["Квартира", "Совместная", "48.2", "Российская Федерация", "", "", "", "МЗСА 817717 -1", ""], ["баня (хозяйственный блок, бесседка, шашлычная-барбекю)", "Индивидуальная", "36", "Российская Федерация", "", "", "", "СКИФ 25 ", ""], ["", "", "", "", "", "", "", "Плазер МТХ", ""], [{"label": "Иванова Мария Петровна", "rowspan": 4}, {"label": "", "rowspan": 4}, "Квартира", "Долевая, 1/2", "97", "Российская Федерация", "Квартира", "63", "Российская Федерация", " ", {"label": 1839818, "rowspan": 4}, ""], ["Квартира", "Долевая, 1/2", "38.2", "Российская Федерация", "Земельный участок", "1500", "Российская Федерация", " ", ""], ["", "", "", "", "Жилой дом", "270", "Российская Федерация", " ", ""], ["", "", "", "", "Квартира", "56.7", "Российская Федерация", " ", ""], [{"label": 2, "rowspan": 13}, {"label": "Иванова Мария Петровна", "rowspan": 4}, {"label": "", "rowspan": 4}, "Квартира", "Долевая, 1/2", "97", "Российская Федерация", "Квартира", "63", "Российская Федерация", " ", {"label": 1839818, "rowspan": 4}, ""], ["Квартира", "Долевая, 1/2", "38.2", "Российская Федерация", "Земельный участок", "1500", "Российская Федерация", " ", ""], ["", "", "", "", "Жилой дом", "270", "Российская Федерация", " ", ""], ["", "", "", "", "Квартира", "56.7", "Российская Федерация", " ", ""], [{"label": "Ивавнов Петр Иванович", "rowspan": 1}, {"label": "", "rowspan": 1}, "", "", "", "", "Квартира", "97", "Российская Федерация", " ", {"label": 0, "rowspan": 1}, ""], [{"label": "Иванов Иван Иванович", "rowspan": 8}, {"label": "старший офицер управления образования Росгвардии", "rowspan": 8}, "Земельный участок", "Индивидуальная", "1500", "Российская Федерация", "Квартира", "64", "Российская Федерация", "БЕНТЛИ Бентьяго Турбо С Эксклюзив", {"label": 6155486, "rowspan": 8}, ""], ["Жилой дом (часть жилого дома (комната), дача)", "Индивидуальная", "270", "Российская Федерация", "Гараж", "24", "Российская Федерация", "ФОЛЬКСВАГЕН Пассат", ""], ["Квартира", "Долевая, 1/2", "97", "Российская Федерация", "Объект незавершенного строительства (жилой дом)", "", "Российская Федерация", "Харлей Дэвитсон Фат Бой",
 ""], ["Квартира", "Долевая, 1/3", "56.7", "Российская Федерация", "", "", "", "ЮМО 50", ""], ["Квартира", "Совместная", "38.2", "Российская Федерация", "", "", "", "Юкона ТС 100", ""], ["Квартира", "Индивидуальная", "57", "Российская Федерация", "", "", "", "МСА 81717 -8", ""], ["", "", "", "", "", "", "", "СКИФ 25 ", "Доход, полученный от продажи квартиры, 344038, Ростовская область, г. Ростов-на-Дону, пл. Центральная, д.30, кв.210, 46,0 кв.м"], ["", "", "", "", "", "", "", "Плазер МТХ", ""], [{"label": 3, "rowspan": 13}, {"label": "Иванов Иван Иванович", "rowspan": 8}, {"label": "офицер управления образования Росгвардии", "rowspan": 8}, "Земельный участок", "Индивидуальная", "1500", "Российская Федерация", "Квартира", "61", "Российская Федерация", "БЕНТЛИ Бентьяго Турбо С Эксклюзив", {"label": 2162634, "rowspan": 8}, ""], ["Жилой дом (часть жилого дома (комната), дача)", "Индивидуальная", "270", "Российская Федерация", "Гараж", "44", "Российская Федерация", "ФОЛЬКСВАГЕН Пассат", ""], ["Квартира", "Индивидуальная", "57", "Российская Федерация", "Объект незавершенного строительства (жилой дом)", "", "Российская Федерация", "Харлей Дэвитсон Фат Бой", ""], ["", "", "", "", "", "", "", "ЮМЗ 50", ""], ["", "", "", "", "", "", "", "Юкона ТС 100", ""], ["", "", "", "", "", "", "", "МЗСА 817717 -1", ""], ["", "", "", "", "", "", "", "СКИФ 25 ", ""], ["", "", "", "", "", "", "", "Плазер МТХ", ""], [{"label": "Ивавнов Петр Иванович", "rowspan": 1}, {"label": "", "rowspan": 1}, "", "", "", "", "Квартира", "97", "Российская Федерация", " ", {"label": 0, "rowspan": 1}, ""], [{"label": "Иванова Мария Петровна", "rowspan": 4}, {"label": "", "rowspan": 4}, "Квартира", "Долевая, 1/2", "97", "Российская Федерация", "Квартира", "63", "Российская Федерация", " ", {"label": 1839818, "rowspan": 4}, ""], ["Квартира", "Долевая, 1/2", "38.2", "Российская Федерация", "Земельный участок", "1500", "Российская Федерация", " ", ""], ["", "", "", "", "Жилой дом", "270", "Российская Федерация", " ", ""], ["", "", "", "", "Квартира", "56.7", "Российская Федерация", " ", ""]]}}

ROOT_PATH = os.path.dirname(__file__)


@app.route('/')
def index():
    return render_template('index.html')


@app.route('/example', methods=['get'])
def example():
    return render_template('index.html', json_data=example_data)


@app.route('/create_document', methods=['post'])
def create_document():
    """
    Генерация документа на основе шаблона
    ---
    tags:
      - Генерация документа на основе шаблона
    parameters:
      - in: formData
        name: template_name
        type: string
        required: true
        schema:
          type: string
          example: 'internet_template.odt'
      - in: formData
        name: json_data
        required: true
        schema:
          type: string
          example: '{
            "table1": {
                "type": "Table",
                "data": [
                    [
                        "первая ячейка", "вторая ячейка", "третья ячейка"
                    ]
                ]
            }
        }'
    produces:
      [application/pdf]
    responses:
      200:
        description: сгенерированный документ
        schema:
          type: file
    """

    file_name = request.form['template_name']

    if file_name != '':
        if len(file_name.split('.')) == 1:
            file_name += '.odt'
        temp_file = 'templates/temp_odt/' + file_name
        if not os.path.exists(temp_file):
            return 'Шаблона с таким именем нет.'

        pdf_type = True if request.form.get('pdf_type') else False
        jd = request.form['json_data']
        if jd == '':
            jd = '{}'
        data = json.loads(jd.replace("'", '"'))

        result_file = 'doc_files/result_' + file_name

        length_file_name = len(file_name)
        pdf_file_name = 'result_' + file_name[:length_file_name -3] + 'pdf'

        open_doc = fill_template(os.path.join(ROOT_PATH, temp_file), data)

        open_doc.save(outputfile=result_file)

        command1 = f'libreoffice --headless --convert-to pdf {result_file}'
        command2 = f'mv {pdf_file_name} doc_files/'
        os.system(command1)
        os.system(command2)

        if pdf_type:
            return send_file('doc_files/' + pdf_file_name, as_attachment=False)
        else:
            return send_file(result_file, as_attachment=False)
    else:
        return 'укажите имя шаблона *.odt'


@app.route('/put_template', methods=['post'])
def put_template():
    """
    Загрузка шаблона документа на сервер
    ---
    tags:
      - Загрузка шаблона документа на сервер
    parameters:
      - in: formData
        name: doc_file
        type: file
        required: true
    responses:
      200:
        description: какое-то описание
    """
    file = request.files['doc_file']

    if file.filename[-4:] != '.odt':
        return 'неизвестный формат файла.'

    if file.filename != '':
        in_filename = 'templates/temp_odt/' + file.filename
        file.save(in_filename)

    return redirect('/')


if __name__ == '__main__':
    app.run()
